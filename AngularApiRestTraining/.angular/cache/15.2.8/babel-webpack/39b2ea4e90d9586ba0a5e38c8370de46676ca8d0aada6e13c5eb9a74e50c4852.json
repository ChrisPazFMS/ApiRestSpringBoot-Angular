{"ast":null,"code":"import { environment } from 'src/app/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/training/training.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"resetFormSave\"];\nfunction UpdeteTrainingComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"h5\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 9);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r2.hostImageTrainings + ctx_r2.training.imagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Language : \", ctx_r2.training.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.training.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price: \", ctx_r2.training.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Quantity: \", ctx_r2.training.quantity, \" \");\n  }\n}\nfunction UpdeteTrainingComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\");\n    i0.ɵɵtext(2, \"Modifier la formation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2);\n    i0.ɵɵtemplate(4, UpdeteTrainingComponent_div_0_div_4_Template, 12, 5, \"div\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.training);\n  }\n}\nfunction UpdeteTrainingComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2, \"Modifier l'entra\\u00EEnement\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 10, 11);\n    i0.ɵɵlistener(\"ngSubmit\", function UpdeteTrainingComponent_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateTraining());\n    });\n    i0.ɵɵelementStart(5, \"div\", 12)(6, \"label\", 13);\n    i0.ɵɵtext(7, \"Nom\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdeteTrainingComponent_div_1_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.training.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 12)(10, \"label\", 15);\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"textarea\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdeteTrainingComponent_div_1_Template_textarea_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.training.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 12)(14, \"label\", 17);\n    i0.ɵɵtext(15, \"Prix\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdeteTrainingComponent_div_1_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.training.price = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 19);\n    i0.ɵɵtext(19, \"Quantit\\u00E9\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdeteTrainingComponent_div_1_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.training.quantity = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 21)(22, \"label\", 22);\n    i0.ɵɵtext(23, \"Image :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 23);\n    i0.ɵɵlistener(\"change\", function UpdeteTrainingComponent_div_1_Template_input_change_24_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onFileChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\")(26, \"button\", 24);\n    i0.ɵɵtext(27, \"Mettre \\u00E0 jour\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.training.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.training.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.training.price);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.training.quantity);\n  }\n}\nexport class UpdeteTrainingComponent {\n  constructor(route, router, trainingService) {\n    this.route = route;\n    this.router = router;\n    this.trainingService = trainingService;\n    this.file = '/imageTraining/java1.jpg';\n    this.hostImageTrainings = environment.hostImageTrainings;\n  }\n  ngOnInit() {\n    this.training = this.trainingService.getTrainingForUpdate();\n    // this.getTraining();\n    console.log('trainingId : ' + this.training);\n    console.log('name : ' + this.training.name);\n  }\n  getTraining() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.trainingService.getTrainingById(id).subscribe(training => {\n        this.training = training;\n      });\n    }\n  }\n  updateTraining() {\n    this.trainingService.updateTraining(this.training).subscribe(() => {\n      console.log('updeteTraining this.training: ' + this.training.imagePath);\n      // Rediriger vers la liste des trainings après la mise à jour\n      this.router.navigate(['/trainings']);\n    });\n  }\n  onFileChange(event) {\n    // const file = event.target.files[0];\n    // this.training.imagePath = file;\n    this.training.imagePath = this.file;\n    console.log('onFileChange  : ' + this.training.imagePath.name);\n  }\n  resetForm() {\n    this.resetFormSave.reset();\n  }\n}\nUpdeteTrainingComponent.ɵfac = function UpdeteTrainingComponent_Factory(t) {\n  return new (t || UpdeteTrainingComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TrainingService));\n};\nUpdeteTrainingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdeteTrainingComponent,\n  selectors: [[\"app-updete-training\"]],\n  viewQuery: function UpdeteTrainingComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resetFormSave = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\"], [\"class\", \"col-md-4\", 4, \"ngIf\"], [1, \"col-md-4\"], [1, \"card\", \"mb-3\"], [\"alt\", \"Training Image\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [3, \"ngSubmit\"], [\"resetFormSave\", \"ngForm\"], [1, \"form-group\", \"my-3\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Nom\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"placeholder\", \"Description\", \"name\", \"description\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"placeholder\", \"Prix\", \"name\", \"price\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"quantity\"], [\"type\", \"number\", \"id\", \"quantity\", \"placeholder\", \"Quantit\\u00E9\", \"name\", \"quantity\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"my-4\"], [\"for\", \"image\"], [\"type\", \"file\", \"id\", \"image\", \"accept\", \"image/*\", \"required\", \"\", 1, \"form-control-file\", \"mx-3\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-start\", \"mb-5\"]],\n  template: function UpdeteTrainingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UpdeteTrainingComponent_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, UpdeteTrainingComponent_div_1_Template, 28, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.training);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.training);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["environment","i0","UpdeteTrainingComponent","constructor","route","router","trainingService","hostImageTrainings","ngOnInit","training","getTrainingForUpdate","console","log","name","getTraining","id","snapshot","paramMap","get","getTrainingById","subscribe","updateTraining","imagePath","navigate","onFileChange","event","file","resetForm","resetFormSave","reset","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\PazmanyC\\Desktop\\Api_Rest_Angular-&-SpringBoot\\ApiRestSpringBoot-Angular\\AngularApiRestTraining\\src\\app\\component\\updete-training\\updete-training.component.ts","C:\\Users\\PazmanyC\\Desktop\\Api_Rest_Angular-&-SpringBoot\\ApiRestSpringBoot-Angular\\AngularApiRestTraining\\src\\app\\component\\updete-training\\updete-training.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from 'src/app/environment/environment';\nimport { Training } from 'src/app/models/training';\nimport { TrainingService } from 'src/app/services/training/training.service';\n\n@Component({\n  selector: 'app-updete-training',\n  templateUrl: './updete-training.component.html',\n  styleUrls: ['./updete-training.component.css'],\n})\nexport class UpdeteTrainingComponent implements OnInit {\n  @ViewChild('resetFormSave', { static: false }) resetFormSave: any;\n  training!: Training;\n  trainingId!: number;\n  name!: string;\n  file: any = '/imageTraining/java1.jpg';\n  public hostImageTrainings: string = environment.hostImageTrainings;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private trainingService: TrainingService\n  ) {}\n\n  ngOnInit(): void {\n    this.training = this.trainingService.getTrainingForUpdate();\n    // this.getTraining();\n    console.log('trainingId : ' + this.training);\n    console.log('name : ' + this.training.name);\n  }\n\n  getTraining(): void {\n    const id = +this.route.snapshot.paramMap.get('id')!;\n    if (id) {\n      this.trainingService.getTrainingById(id).subscribe((training) => {\n        this.training = training;\n      });\n    }\n  }\n\n  updateTraining(): void {\n    this.trainingService.updateTraining(this.training).subscribe(() => {\n      console.log('updeteTraining this.training: ' + this.training.imagePath);\n      // Rediriger vers la liste des trainings après la mise à jour\n      this.router.navigate(['/trainings']);\n    });\n  }\n\n  onFileChange(event: any) {\n    // const file = event.target.files[0];\n    // this.training.imagePath = file;\n    this.training.imagePath = this.file;\n\n    console.log('onFileChange  : ' + this.training.imagePath.name);\n  }\n\n  resetForm(): void {\n    this.resetFormSave.reset();\n  }\n}\n","<div class=\"container\" *ngIf=\"training\">\n    <h1>Modifier la formation</h1>\n    <div class=\"row\">\n      <div class=\"col-md-4\"  *ngIf=\"training\">\n        <div class=\"card mb-3\">\n            <img [src]=\"hostImageTrainings + training.imagePath\" alt=\"Training Image\"> \n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Language : {{ training.name }}</h5>\n            <p class=\"card-text\">{{ training.description }}</p>\n            <p class=\"card-text\">Price: {{ training.price }}</p>\n            <p class=\"card-text\">Quantity: {{ training.quantity }}\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <p class=\"error-message\" *ngIf=\"error\">{{ error }}</p> -->\n  </div>\n  <div class=\"container\" *ngIf=\"training\">\n    <h2>Modifier l'entraînement</h2>\n    <form (ngSubmit)=\"updateTraining()\" #resetFormSave=\"ngForm\">\n      <div class=\"form-group my-3\">\n        <label for=\"name\">Nom</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"training.name\" name=\"name\" required>\n      </div>\n      <div class=\"form-group my-3\">\n        <label for=\"description\">Description</label>\n        <textarea class=\"form-control\" id=\"description\" placeholder=\"Description\" [(ngModel)]=\"training.description\" name=\"description\" required></textarea>\n      </div>\n      <div class=\"form-group my-3\">\n        <label for=\"price\">Prix</label>\n        <input type=\"number\" class=\"form-control\" id=\"price\" placeholder=\"Prix\" [(ngModel)]=\"training.price\" name=\"price\" required>\n      </div>\n      <div class=\"form-group my-3\">\n        <label for=\"quantity\">Quantité</label>\n        <input type=\"number\" class=\"form-control\" id=\"quantity\" placeholder=\"Quantité\" [(ngModel)]=\"training.quantity\" name=\"quantity\" required>\n      </div>\n      <div class=\"form-group my-4\">\n        <label for=\"image\">Image :</label>\n        <input type=\"file\" class=\"form-control-file mx-3\" id=\"image\" (change)=\"onFileChange($event)\" accept=\"image/*\" required>\n      </div>\n      <div>\n        <button type=\"submit\" class=\"btn btn-primary float-start mb-5\">Mettre à jour</button>\n      </div>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}