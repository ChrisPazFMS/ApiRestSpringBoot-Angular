{"ast":null,"code":"import { environment } from 'src/app/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TrainingService {\n  constructor(http) {\n    this.http = http;\n  }\n  //fonctionne\n  // postTraining(training: Training): Observable<Training> {\n  //   return this.http.post<Training>(environment.host + '/trainings', training);\n  // }\n  postTraining(training, image) {\n    const formData = new FormData();\n    formData.append('name', training.name);\n    formData.append('description', training.description);\n    formData.append('price', training.price);\n    formData.append('quantity', training.quantity);\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n  }\n  getTrainings() {\n    return this.http.get(environment.host + '/trainings');\n  }\n  getTrainingById(id) {\n    return this.http.get(environment.host + '/training' + id);\n  }\n}\nTrainingService.ɵfac = function TrainingService_Factory(t) {\n  return new (t || TrainingService)(i0.ɵɵinject(i1.HttpClient));\n};\nTrainingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrainingService,\n  factory: TrainingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,iCAAiC;;;AAM7D,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EACvC;EACA;EACA;EACA;EAEAC,YAAY,CAACC,QAAkB,EAAEC,KAAkB;IACjD,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IACtCH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEJ,QAAQ,CAACM,WAAW,CAAC;IACpDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,QAAQ,CAACO,KAAK,CAAC;IACxCL,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAACQ,QAAQ,CAAC;IAC9C,IAAIP,KAAK,EAAE;MACTC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,EAAEA,KAAK,CAACI,IAAI,CAAC;;EAE/C;EAEAI,YAAY;IACV,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAaf,WAAW,CAACgB,IAAI,GAAG,YAAY,CAAC;EACnE;EAEAC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACf,IAAI,CAACY,GAAG,CAAWf,WAAW,CAACgB,IAAI,GAAG,WAAW,GAAGE,EAAE,CAAC;EACrE;;AAxBWjB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;EAAAmB,YAFd;AAAM","names":["environment","TrainingService","constructor","http","postTraining","training","image","formData","FormData","append","name","description","price","quantity","getTrainings","get","host","getTrainingById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\PazmanyC\\Desktop\\Api_Rest_Angular-&-SpringBoot\\ApiRestSpringBoot-Angular\\AngularApiRestTraining\\AngularTraining\\src\\app\\services\\training\\training.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { environment } from 'src/app/environment/environment';\nimport { Training } from 'src/app/models/training';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingService {\n  constructor(private http: HttpClient) {}\n  //fonctionne\n  // postTraining(training: Training): Observable<Training> {\n  //   return this.http.post<Training>(environment.host + '/trainings', training);\n  // }\n\n  postTraining(training: Training, image: File | null) {\n    const formData: FormData = new FormData();\n    formData.append('name', training.name);\n    formData.append('description', training.description);\n    formData.append('price', training.price);\n    formData.append('quantity', training.quantity);\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n  }\n\n  getTrainings(): Observable<Training[]> {\n    return this.http.get<Training[]>(environment.host + '/trainings');\n  }\n\n  getTrainingById(id: number): Observable<Training> {\n    return this.http.get<Training>(environment.host + '/training' + id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}