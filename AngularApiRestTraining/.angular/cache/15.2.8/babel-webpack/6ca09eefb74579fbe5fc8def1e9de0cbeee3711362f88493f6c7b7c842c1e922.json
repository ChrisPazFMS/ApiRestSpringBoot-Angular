{"ast":null,"code":"import { environment } from 'src/app/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TrainingService {\n  constructor(http) {\n    this.http = http;\n  }\n  setSelectedTraining(training) {\n    this.trainingForUpdate = training;\n  }\n  getTrainingForUpdate() {\n    return this.trainingForUpdate;\n  }\n  postTraining(training) {\n    const formData = new FormData();\n    formData.append('id', training.id);\n    formData.append('name', training.name);\n    formData.append('description', training.description);\n    formData.append('price', training.price.toString());\n    formData.append('quantity', training.quantity.toString());\n    formData.append('imagePath', training.imagePath);\n    return this.http.post(environment.host + '/trainings', formData);\n  }\n  getTrainings() {\n    return this.http.get(environment.host + '/trainings');\n  }\n  getTrainingById(id) {\n    const url = environment.trainings + id;\n    return this.http.get(url);\n  }\n  updateTraining(training) {\n    const url = `http://localhost:8080/api/training/${training.id}`;\n    return this.http.put(url, training);\n  }\n  deleteTraining(id) {\n    const url = `${environment.host + '/training'}/${id}`;\n    return this.http.delete(url);\n  }\n}\nTrainingService.ɵfac = function TrainingService_Factory(t) {\n  return new (t || TrainingService)(i0.ɵɵinject(i1.HttpClient));\n};\nTrainingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrainingService,\n  factory: TrainingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,iCAAiC;;;AAM7D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAIvCC,mBAAmB,CAACC,QAAkB;IACpC,IAAI,CAACC,iBAAiB,GAAGD,QAAQ;EACnC;EAEAE,oBAAoB;IAClB,OAAO,IAAI,CAACD,iBAAiB;EAC/B;EAEAE,YAAY,CAACH,QAAkB;IAC7B,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAEN,QAAQ,CAACO,EAAE,CAAC;IAClCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,QAAQ,CAACQ,IAAI,CAAC;IACtCJ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEN,QAAQ,CAACS,WAAW,CAAC;IACpDL,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,QAAQ,CAACU,KAAK,CAACC,QAAQ,EAAE,CAAC;IACnDP,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAACY,QAAQ,CAACD,QAAQ,EAAE,CAAC;IACzDP,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEN,QAAQ,CAACa,SAAS,CAAC;IAEhD,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAACnB,WAAW,CAACoB,IAAI,GAAG,YAAY,EAAEX,QAAQ,CAAC;EAClE;EAEAY,YAAY;IACV,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAatB,WAAW,CAACoB,IAAI,GAAG,YAAY,CAAC;EACnE;EAEAG,eAAe,CAACX,EAAU;IACxB,MAAMY,GAAG,GAAGxB,WAAW,CAACyB,SAAS,GAAGb,EAAE;IACtC,OAAO,IAAI,CAACT,IAAI,CAACmB,GAAG,CAAWE,GAAG,CAAC;EACrC;EAEAE,cAAc,CAACrB,QAAkB;IAC/B,MAAMmB,GAAG,GAAG,sCAAsCnB,QAAQ,CAACO,EAAE,EAAE;IAC/D,OAAO,IAAI,CAACT,IAAI,CAACwB,GAAG,CAAWH,GAAG,EAAEnB,QAAQ,CAAC;EAC/C;EAEAuB,cAAc,CAAChB,EAAU;IACvB,MAAMY,GAAG,GAAG,GAAGxB,WAAW,CAACoB,IAAI,GAAG,WAAW,IAAIR,EAAE,EAAE;IACrD,OAAO,IAAI,CAACT,IAAI,CAAC0B,MAAM,CAAOL,GAAG,CAAC;EACpC;;AA3CWvB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA6B,SAAf7B,eAAe;EAAA8B,YAFd;AAAM","names":["environment","TrainingService","constructor","http","setSelectedTraining","training","trainingForUpdate","getTrainingForUpdate","postTraining","formData","FormData","append","id","name","description","price","toString","quantity","imagePath","post","host","getTrainings","get","getTrainingById","url","trainings","updateTraining","put","deleteTraining","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\PazmanyC\\Desktop\\Api_Rest_Angular-&-SpringBoot\\ApiRestSpringBoot-Angular\\AngularApiRestTraining\\src\\app\\services\\training\\training.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { environment } from 'src/app/environment/environment';\nimport { Training } from 'src/app/models/training';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingService {\n  selectedTraining!: Training;\n  constructor(private http: HttpClient) {}\n\n  private trainingForUpdate!: Training;\n\n  setSelectedTraining(training: Training): void {\n    this.trainingForUpdate = training;\n  }\n\n  getTrainingForUpdate(): Training {\n    return this.trainingForUpdate;\n  }\n\n  postTraining(training: Training): Observable<any> {\n    const formData = new FormData();\n    formData.append('id', training.id);\n    formData.append('name', training.name);\n    formData.append('description', training.description);\n    formData.append('price', training.price.toString());\n    formData.append('quantity', training.quantity.toString());\n    formData.append('imagePath', training.imagePath);\n\n    return this.http.post(environment.host + '/trainings', formData);\n  }\n\n  getTrainings(): Observable<Training[]> {\n    return this.http.get<Training[]>(environment.host + '/trainings');\n  }\n\n  getTrainingById(id: number): Observable<Training> {\n    const url = environment.trainings + id;\n    return this.http.get<Training>(url);\n  }\n\n  updateTraining(training: Training): Observable<Training> {\n    const url = `http://localhost:8080/api/training/${training.id}`;\n    return this.http.put<Training>(url, training);\n  }\n\n  deleteTraining(id: number): Observable<void> {\n    const url = `${environment.host + '/training'}/${id}`;\n    return this.http.delete<void>(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}